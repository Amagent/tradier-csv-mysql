
Para eliminar donde estaba anteriores

Borrar la carpeta .git


// para Cargar un proyexto local a GitHub

// si no anda con main poner a master

…or create a new repository on the command line
echo "# CRUD-Prisma" >> README.md
git init
git add README.md
git add .
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Amagent/CRUD-Prisma.git
git push -u origin main



…or push an existing repository from the command line
git remote add origin https://github.com/Amagent/CRUD-Prisma.git
git branch -M main
git push -u origin main




--------------------------

desde la web de github
Creamos un nuevo repositorio en https://github.com. Le damos nombre, descripción, seleccionamos si va a ser un proyecto publico o privado si es el caso, y dejamos el check de crear README sin marcar. Le damos a crear repositorio y con esto ya tenemos el repositorio donde alojaremos nuestro proyecto.

desde la terminal del equipo donde esta el proyecto que queremos subir a github
Nos vamos a la carpeta del proyecto y ejecutamos estos comandos.


git init

git add .

git commit -m "first commit"

git remote add origin https://github.com/NOMBRE_USUARIO/NOMBRE_PROYECTO.git

git push -u origin master




// Para ver los archivos
git status

// Para ver los commit anteriores
git log

// Para cargar los cambios 
git add .  
git commit -am "nombre de los cambios"

// para pasar lo actualizado a GitHub
git push

// para traer la ultima version
git pull -u origin main




// Para ver los branch
git branch

// Para ver tanto las ramas de seguimiento remoto como las ramas locales, ejecuta el comando:
git branch -a

// Para moverse a una rama existente, ejecuta el comando:
git checkout NOMBRE-RAMA

//Para crear una nueva rama, ejecutar el comando:
git branch NOMBRE-NUEVA-RAMA

//Para renombrar una rama, ejecutar el comando:
git branch -m VIEJO-NOMBRE-RAMA NUEVO-NOMBRE-RAMA

// Eliminar una Rama - Git no te permitirá eliminar una rama en la que te encuentres actualmente. Primero necesitas moverte a una rama diferente, y luego ejecutar el comando:
git branch -d RAMA-A-ELIMINAR

// Puedes comparar ramas con el comando git diff:
git diff PRIMERA-RAMA..SEGUNDA-RAMA

// Ayuda con Ramas de Git
git help branch

